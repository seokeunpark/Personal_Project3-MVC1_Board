<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="util.BoardMapper">

	<!--
	 [MyBatis_Mapper XML 파일_요소와 속성]
	 ## 공식 문서: https://mybatis.org/mybatis-3/ko/sqlmap-xml.html
	 ## MyBatis는 select 요소의 강력한 기능을 탑재했다.
	 1. <select> 요소의 속성들 : 데이터베이스에 새로운 레코드를 삽입
	 	id: 구문의 이름 (메소드명)
	 	parameterType: 구문에 전달될 파라미터의 패키지 경로를 포함한 전체 클래스명이나 별칭
	 					(패키지경로.필드 정의한 클래스명=VO클래스명)
	 	resultType: 쿼리의 결과를 매핑할 Java 객체의 타입
	2. <insert>
		parameterType: SQL 쿼리에 전달되는 매개변수 객체의 타입
		statementType: SQL문의 종류
	3. <update>
		parameterType: SQL 쿼리에 전달되는 매개변수 객체의 타입
		statementType: SQL문의 종류
	4. <delete>
		parameterType: SQL 쿼리에 전달되는 매개변수 객체의 타입
		statementType: SQL문의 종류
	-->


	<!-- insertBoard 메소드의 sql문 -->
    <insert id="insertBoard" parameterType="util.BoardVO">
		INSERT INTO boards (btitle, bcontent, bwriter)
		VALUES (#{btitle}, #{bcontent}, #{bwriter})
    </insert>

	<!-- getBoard 메소드의 sql문 -->
	<select id="getBoard" resultType="util.BoardVO">
		SELECT *
		FROM boards
		ORDER BY bno DESC
	</select>

	<select id="readBoard" resultType="util.BoardVO" parameterType="int">
		SELECT *
		FROM boards
		Where bno = #{bno}
	</select>

	<delete id="deleteBoard" parameterType="int">
		DELETE FROM boards
		WHERE bno = #{bno}
	</delete>

	<delete id="clearBoard" parameterType="util.BoardVO">
		DELETE FROM boards
	</delete>

	<update id="updateBoard" parameterType="util.BoardVO">
		UPDATE boards SET
			btitle = #{btitle},
			bcontent = #{bcontent},
			bwriter = #{bwriter}
		WHERE bno = #{bno}
	</update>

</mapper>
